{"version":3,"file":"data-table-filter-bar.js","sourceRoot":"","sources":["../../../../../src/blocks/data-table/components/data-table-filter-bar.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { DataTableFilter } from \"@/blocks/data-table/components/data-table-filter\"\nimport { DataTableFilterMenu } from \"@/blocks/data-table/components/data-table-filter-menu\"\nimport { DataTableSortingMenu } from \"@/blocks/data-table/components/data-table-sorting-menu\"\nimport { DataTableColumnVisibilityMenu } from \"@/blocks/data-table/components/data-table-column-visibility-menu\"\nimport { useDataTableContext } from \"@/blocks/data-table/context/use-data-table-context\"\nimport { Button } from \"@/components/button\"\nimport { Skeleton } from \"@/components/skeleton\"\n\ninterface DataTableFilterBarProps {\n  clearAllFiltersLabel?: string\n  alwaysShow?: boolean\n  sortingTooltip?: string\n  columnsTooltip?: string\n  children?: React.ReactNode\n}\n\ninterface LocalFilter {\n  id: string\n  value: unknown\n  isNew: boolean\n}\n\nconst DataTableFilterBar = ({\n  clearAllFiltersLabel = \"Clear all\",\n  alwaysShow = false,\n  sortingTooltip,\n  columnsTooltip,\n  children,\n}: DataTableFilterBarProps) => {\n  const { instance, enableColumnVisibility } = useDataTableContext()\n  \n  // Local state for managing intermediate filters\n  const [localFilters, setLocalFilters] = React.useState<LocalFilter[]>([])\n  \n  const parentFilterState = instance.getFiltering()\n  const availableFilters = instance.getFilters()\n  \n  // Sync parent filters with local state\n  React.useEffect(() => {\n    setLocalFilters(prevLocalFilters => {\n      const parentIds = Object.keys(parentFilterState)\n      const localIds = prevLocalFilters.map(f => f.id)\n      \n      // Remove local filters that have been removed from parent\n      const updatedLocalFilters = prevLocalFilters.filter(f => \n        parentIds.includes(f.id) || f.isNew\n      )\n      \n      // Add parent filters that don't exist locally\n      parentIds.forEach(id => {\n        if (!localIds.includes(id)) {\n          updatedLocalFilters.push({\n            id,\n            value: parentFilterState[id],\n            isNew: false\n          })\n        }\n      })\n      \n      // Only update if there's an actual change\n      if (updatedLocalFilters.length !== prevLocalFilters.length ||\n          updatedLocalFilters.some((f, i) => f.id !== prevLocalFilters[i]?.id)) {\n        return updatedLocalFilters\n      }\n      return prevLocalFilters\n    })\n  }, [parentFilterState])\n  \n  // Add a new filter locally\n  const addLocalFilter = React.useCallback((id: string, value: unknown) => {\n    setLocalFilters(prev => [...prev, { id, value, isNew: true }])\n  }, [])\n  \n  // Update a local filter's value\n  const updateLocalFilter = React.useCallback((id: string, value: unknown) => {\n    setLocalFilters(prev => prev.map(f => \n      f.id === id ? { ...f, value, isNew: false } : f\n    ))\n    \n    // If the filter has a meaningful value, propagate to parent\n    if (value !== undefined && value !== null && value !== '' && \n        !(Array.isArray(value) && value.length === 0)) {\n      instance.updateFilter({ id, value })\n    }\n  }, [instance])\n  \n  // Remove a local filter\n  const removeLocalFilter = React.useCallback((id: string) => {\n    setLocalFilters(prev => prev.filter(f => f.id !== id))\n    // Also remove from parent if it exists there\n    if (parentFilterState[id] !== undefined) {\n      instance.removeFilter(id)\n    }\n  }, [instance, parentFilterState])\n\n  const clearFilters = React.useCallback(() => {\n    setLocalFilters([])\n    instance.clearFilters()\n  }, [instance])\n\n  const filterCount = localFilters.length\n  const hasAvailableFilters = availableFilters.length > 0\n  \n  // Check if sorting is enabled\n  const sortableColumns = instance.getAllColumns().filter((column) => column.getCanSort())\n  const hasSorting = instance.enableSorting && sortableColumns.length > 0\n\n  // Always show the filter bar when there are available filters, sorting, column visibility, or when forced\n  if (filterCount === 0 && !hasAvailableFilters && !hasSorting && !enableColumnVisibility && !alwaysShow && !children) {\n    return null\n  }\n\n  if (instance.showSkeleton) {\n    return <DataTableFilterBarSkeleton filterCount={filterCount} />\n  }\n\n  return (\n    <div className=\"bg-ui-bg-subtle flex w-full flex-nowrap items-center justify-between gap-2 overflow-x-auto border-t px-6 py-2\">\n      <div className=\"flex flex-nowrap items-center gap-2 md:flex-wrap\">\n        {localFilters.map((localFilter) => (\n          <DataTableFilter \n            key={localFilter.id} \n            id={localFilter.id} \n            filter={localFilter.value} \n            isNew={localFilter.isNew}\n            onUpdate={(value) => updateLocalFilter(localFilter.id, value)}\n            onRemove={() => removeLocalFilter(localFilter.id)}\n          />\n        ))}\n        {hasAvailableFilters && (\n          <DataTableFilterMenu onAddFilter={addLocalFilter} />\n        )}\n      </div>\n      <div className=\"flex flex-shrink-0 items-center gap-2\">\n        {hasSorting && <DataTableSortingMenu tooltip={sortingTooltip} />}\n        {enableColumnVisibility && <DataTableColumnVisibilityMenu tooltip={columnsTooltip} />}\n        {children}\n      </div>\n    </div>\n  )\n}\nDataTableFilterBar.displayName = \"DataTable.FilterBar\"\n\nconst DataTableFilterBarSkeleton = ({\n  filterCount,\n}: {\n  filterCount: number\n}) => {\n  return (\n    <div className=\"bg-ui-bg-subtle flex w-full flex-nowrap items-center gap-2 overflow-x-auto border-t px-6 py-2 md:flex-wrap\">\n      {Array.from({ length: filterCount }).map((_, index) => (\n        <Skeleton key={index} className=\"h-7 w-[180px]\" />\n      ))}\n      {filterCount > 0 ? <Skeleton className=\"h-7 w-[66px]\" /> : null}\n    </div>\n  )\n}\n\nexport { DataTableFilterBar }\nexport type { DataTableFilterBarProps }\n\n"]}