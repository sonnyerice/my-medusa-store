{"version":3,"file":"data-table-toolbar.js","sourceRoot":"","sources":["../../../../../src/blocks/data-table/components/data-table-toolbar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,sDAAsD,CAAA;AACzF,OAAO,EAAE,mBAAmB,EAAE,MAAM,oDAAoD,CAAA;AACxF,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AACjC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAqC9B;;GAEG;AACH,MAAM,gBAAgB,GAAG,CAAC,KAA4B,EAAE,EAAE;;IACxD,MAAM,EAAE,QAAQ,EAAE,GAAG,mBAAmB,EAAE,CAAA;IAC1C,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC,MAAM,GAAG,CAAC,CAAA;IAEnD,OAAO,CACL,6BAAK,SAAS,EAAC,wBAAwB;QACrC,6BAAK,SAAS,EAAE,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,SAAS,CAAC,IAChE,KAAK,CAAC,QAAQ,CACX;QACN,oBAAC,kBAAkB,IACjB,oBAAoB,EAAE,MAAA,KAAK,CAAC,YAAY,0CAAE,QAAQ,EAClD,UAAU,EAAE,UAAU,EACtB,cAAc,EAAE,MAAA,KAAK,CAAC,YAAY,0CAAE,IAAI,EACxC,cAAc,EAAE,MAAA,KAAK,CAAC,YAAY,0CAAE,OAAO,IAE1C,KAAK,CAAC,gBAAgB,CACJ,CACjB,CACP,CAAA;AACH,CAAC,CAAA;AAED,OAAO,EAAE,gBAAgB,EAAE,CAAA","sourcesContent":["import { DataTableFilterBar } from \"@/blocks/data-table/components/data-table-filter-bar\"\nimport { useDataTableContext } from \"@/blocks/data-table/context/use-data-table-context\"\nimport { clx } from \"@/utils/clx\"\nimport * as React from \"react\"\n\ninterface DataTableToolbarTranslations {\n  /**\n   * The label for the clear all filters button\n   * @default \"Clear all\"\n   */\n  clearAll?: string\n  /**\n   * The tooltip for the sorting menu\n   */\n  sort?: string\n  /**\n   * The tooltip for the columns menu  \n   */\n  columns?: string\n}\n\ninterface DataTableToolbarProps {\n  /**\n   * Additional classes to pass to the wrapper `div` of the component.\n   */\n  className?: string\n  /**\n   * The children to show in the toolbar.\n   */\n  children?: React.ReactNode\n  /**\n   * The translations of strings in the toolbar.\n   */\n  translations?: DataTableToolbarTranslations\n  /**\n   * Custom content to render in the filter bar\n   */\n  filterBarContent?: React.ReactNode\n}\n\n/**\n * Toolbar shown for the data table.\n */\nconst DataTableToolbar = (props: DataTableToolbarProps) => {\n  const { instance } = useDataTableContext()\n  const hasFilters = instance.getFilters().length > 0\n\n  return (\n    <div className=\"flex flex-col divide-y\">\n      <div className={clx(\"flex items-center px-6 py-4\", props.className)}>\n        {props.children}\n      </div>\n      <DataTableFilterBar\n        clearAllFiltersLabel={props.translations?.clearAll}\n        alwaysShow={hasFilters}\n        sortingTooltip={props.translations?.sort}\n        columnsTooltip={props.translations?.columns}\n      >\n        {props.filterBarContent}\n      </DataTableFilterBar>\n    </div>\n  )\n}\n\nexport { DataTableToolbar }\nexport type { DataTableToolbarProps, DataTableToolbarTranslations }\n\n"]}