import { type ProviderSendNotificationDTO, type ProviderSendNotificationResultsDTO } from '@medusajs/framework/types';
import { AbstractNotificationProviderService } from '@medusajs/framework/utils';
import { type Transporter } from 'nodemailer';
import type SMTPConnection from 'nodemailer/lib/smtp-connection';
import type SMTPTransport from 'nodemailer/lib/smtp-transport';
export type PluginOptions = SMTPConnection.Options & SMTPTransport.MailOptions & {
    from: string;
};
export declare class NodemailerNotificationProviderService extends AbstractNotificationProviderService {
    static identifier: string;
    protected options_: PluginOptions;
    protected transporter: Transporter;
    constructor(_: any, options: PluginOptions);
    static validateOptions(options: Record<any, any>): void;
    send(notification: ProviderSendNotificationDTO): Promise<ProviderSendNotificationResultsDTO>;
}
export default NodemailerNotificationProviderService;
